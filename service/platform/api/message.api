syntax = "v1"

info(
    title: "platform-message"
    author: "xm"
    version: "v1"
)

type (
    EbMsgReq {
        PlatformShopId string `json:"platformShopId"`  //平台门店ID
        BizType string `json:"bizType"`                //业务类型，IM消息。默认值：IM
        SubBizType string `json:"subBizType"`          //子业务类型，发送消息。默认值：SEND_MESSAGE
        Payload *EbMsgReqPayload `json:"payload"`      //回复消息内容体
    }

    EbMsgReqPayload {
        GroupId string `json:"groupId"` //会话ID
        MsgId string `json:"msgId"` //消息ID
        ReceiverIds []string `json:"receiverIds"` //接收人列表
        Content string `json:"content"` //发送内容，格式：JSON EbMsgReqPayloadContent
        ContentType string `json:"contentType"` //内容类型，目前只支持文本消息。枚举值： 1-普通文本
    }

    EbMsgReqPayloadContent {
        Text string `json:"text"` //消息文本
    }


    EbMsgResp {
        Body *EbMsgRespBody `json:"body"`
        Cmd string `json:"cmd"`
        Sign string `json:"sign"`
        Source string `json:"source"`
        Ticket string `json:"ticket"`
        Timestamp int `json:"timestamp"`
        Traceid string `json:"traceid"`
        Version int `json:"version"`
    }

    EbMsgRespBody {
        Errno int `json:"errno"`
        Error string `json:"error"`
        Data bool `json:"data"`
    }
)

@server(
    prefix:platform/message
    group : message
)
service platform-api {
    @doc "饿百鲜花-商家IM消息发送"
    @handler EbflowerMessage
    post / (EbMsgReq) returns (EbMsgResp)
}
